{"version":"1.117.0","results":[{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"repos_commits_edited_files/repos_edited_files/Zope/2abdf14/ZRPythonExpr.py","start":{"line":49,"col":16,"offset":2025},"end":{"line":49,"col":42,"offset":2051},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rule_name":"python.lang.security.audit.eval-detected.eval-detected","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"ee7adf97cefab3eec5370904c8fec95dabce6c50e84bb4c44b7f4113921d5b760675200ed2450d968b77ccc100af2e13c871c6db481bf176107d83e3c2cbaa3b_0","lines":"        return eval(self._code, vars, {})","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.sqlalchemy.performance.performance-improvements.len-all-count","path":"repos_commits_edited_files/repos_edited_files/bcfg2/f4a35ef/SSHbase.py","start":{"line":87,"col":16,"offset":3441},"end":{"line":87,"col":51,"offset":3476},"extra":{"metavars":{"$X":{"start":{"line":87,"col":20,"offset":3445},"end":{"line":87,"col":44,"offset":3469},"abstract_content":"self.core.metadata.query"}},"message":"Using QUERY.count() instead of len(QUERY.all()) sends less data to the client since the SQLAlchemy method is performed server-side.","metadata":{"category":"performance","technology":["sqlalchemy"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/python.sqlalchemy.performance.performance-improvements.len-all-count","shortlink":"https://sg.run/4y8g","semgrep.dev":{"rule":{"origin":"community","r_id":9700,"rule_id":"ReUPOw","rule_name":"python.sqlalchemy.performance.performance-improvements.len-all-count","rv_id":946449,"url":"https://semgrep.dev/playground/r/ExTg2Gr/python.sqlalchemy.performance.performance-improvements.len-all-count","version_id":"ExTg2Gr"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.sqlalchemy.performance.performance-improvements.len-all-count","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"2d5db77c83a3d3fbb5664fbec3fe001bbd9b1a1d417c6096927f9fae82d5cca904d97524c6c71e2f18bdf31b217ab5006d00b24f16cb46922511ee38962ae789_0","lines":"            if len(self.core.metadata.query.all()) == 0:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"repos_commits_edited_files/repos_edited_files/bcfg2/f4a35ef/SSLCA.py","start":{"line":194,"col":37,"offset":8103},"end":{"line":194,"col":41,"offset":8107},"extra":{"metavars":{"$FUNC":{"start":{"line":194,"col":20,"offset":8086},"end":{"line":194,"col":25,"offset":8091},"abstract_content":"Popen"},"$TRUE":{"start":{"line":194,"col":37,"offset":8103},"end":{"line":194,"col":41,"offset":8107},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rule_name":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"ERROR","fingerprint":"14405306ab4790b93185ad6c8b7873cde46149418ac449b378f917f658a0e191c2a5d66d86da34a057a3d22253967fa9258a9fb2f1c7783c225e7bf0edaba88d_0","lines":"        cert_md5 = Popen(cmd, shell=True, stdout=PIPE, stderr=STDOUT).stdout.read()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"repos_commits_edited_files/repos_edited_files/bcfg2/f4a35ef/SSLCA.py","start":{"line":197,"col":36,"offset":8287},"end":{"line":197,"col":40,"offset":8291},"extra":{"metavars":{"$FUNC":{"start":{"line":197,"col":19,"offset":8270},"end":{"line":197,"col":24,"offset":8275},"abstract_content":"Popen"},"$TRUE":{"start":{"line":197,"col":36,"offset":8287},"end":{"line":197,"col":40,"offset":8291},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rule_name":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"ERROR","fingerprint":"14405306ab4790b93185ad6c8b7873cde46149418ac449b378f917f658a0e191c2a5d66d86da34a057a3d22253967fa9258a9fb2f1c7783c225e7bf0edaba88d_1","lines":"        key_md5 = Popen(cmd, shell=True, stdout=PIPE, stderr=STDOUT).stdout.read()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"repos_commits_edited_files/repos_edited_files/bcfg2/f4a35ef/SSLCA.py","start":{"line":274,"col":32,"offset":11293},"end":{"line":274,"col":36,"offset":11297},"extra":{"metavars":{"$FUNC":{"start":{"line":274,"col":15,"offset":11276},"end":{"line":274,"col":20,"offset":11281},"abstract_content":"Popen"},"$TRUE":{"start":{"line":274,"col":32,"offset":11293},"end":{"line":274,"col":36,"offset":11297},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rule_name":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"ERROR","fingerprint":"14405306ab4790b93185ad6c8b7873cde46149418ac449b378f917f658a0e191c2a5d66d86da34a057a3d22253967fa9258a9fb2f1c7783c225e7bf0edaba88d_2","lines":"        res = Popen(cmd, shell=True, stdout=PIPE).stdout.read()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"repos_commits_edited_files/repos_edited_files/bcfg2/f4a35ef/Svn.py","start":{"line":38,"col":62,"offset":1193},"end":{"line":38,"col":66,"offset":1197},"extra":{"metavars":{"$FUNC":{"start":{"line":37,"col":20,"offset":1096},"end":{"line":37,"col":25,"offset":1101},"abstract_content":"Popen"},"$TRUE":{"start":{"line":38,"col":62,"offset":1193},"end":{"line":38,"col":66,"offset":1197},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rule_name":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"ERROR","fingerprint":"3730eeabf66cf8e3b0cf6baac67ffefda502edf412b0ca622eb370aefea197296b7cfb06f0de2e7c9f674a23c00ef19c4e468f6f80343e69bd8db59efa28222d_0","lines":"                         pipes.quote(self.datastore)), shell=True,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"repos_commits_edited_files/repos_edited_files/keystone/375838c/service.py","start":{"line":363,"col":9,"offset":13845},"end":{"line":363,"col":49,"offset":13885},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"log"},"$LOGGER_OBJ":{"start":{"line":363,"col":9,"offset":13845},"end":{"line":363,"col":16,"offset":13852},"abstract_content":"logging logging logging"},"$LOGGER_CALL":{"start":{"line":363,"col":17,"offset":13853},"end":{"line":363,"col":22,"offset":13858},"abstract_content":"debug"},"$FORMAT_STRING":{"start":{"line":363,"col":23,"offset":13859},"end":{"line":363,"col":37,"offset":13873},"abstract_content":"'TOKEN_REF %s'"}},"message":"Detected a python logger call with a potential hardcoded secret 'TOKEN_REF %s' being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx","semgrep.dev":{"rule":{"origin":"community","r_id":9668,"rule_id":"x8UnJk","rule_name":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","rv_id":946365,"url":"https://semgrep.dev/playground/r/0bT15ze/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","version_id":"0bT15ze"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"2f7f08ac8937413e8f2893e78b0a1f97b94667b9de54ea3c7d25e41a4c33f8f8f36fe1ac2943c7196df5e902bb820fdb77f7f388015aba588af41103e8bc1ac9_0","lines":"        logging.debug('TOKEN_REF %s', token_ref)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"repos_commits_edited_files/repos_edited_files/keystone/628149b/service.py","start":{"line":362,"col":9,"offset":13767},"end":{"line":362,"col":49,"offset":13807},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"log"},"$LOGGER_OBJ":{"start":{"line":362,"col":9,"offset":13767},"end":{"line":362,"col":16,"offset":13774},"abstract_content":"logging"},"$LOGGER_CALL":{"start":{"line":362,"col":17,"offset":13775},"end":{"line":362,"col":22,"offset":13780},"abstract_content":"debug"},"$FORMAT_STRING":{"start":{"line":362,"col":23,"offset":13781},"end":{"line":362,"col":37,"offset":13795},"abstract_content":"'TOKEN_REF %s'"}},"message":"Detected a python logger call with a potential hardcoded secret 'TOKEN_REF %s' being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx","semgrep.dev":{"rule":{"origin":"community","r_id":9668,"rule_id":"x8UnJk","rule_name":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","rv_id":946365,"url":"https://semgrep.dev/playground/r/0bT15ze/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","version_id":"0bT15ze"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"d25c449e727da62cbc1a826eebd205b66b6d8d081f7c17673d4ebc3ba541c152aed47385411c22c9ce98d5cd89e5ed25e5a03c3e2bef3b9fd66f7b512bd241cd_0","lines":"        logging.debug('TOKEN_REF %s', token_ref)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"trailofbits.python.tarfile-extractall-traversal.tarfile-extractall-traversal","path":"repos_commits_edited_files/repos_edited_files/nova/ad32419/s3.py","start":{"line":403,"col":9,"offset":16337},"end":{"line":404,"col":34,"offset":16412},"extra":{"metavars":{"$TAR":{"start":{"line":403,"col":9,"offset":16337},"end":{"line":403,"col":17,"offset":16345},"abstract_content":"tar_file"}},"message":"Possible path traversal through `tarfile.open($PATH).extractall()` if the source tar is controlled by an attacker","metadata":{"category":"security","cwe":"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","subcategory":["vuln"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","technology":["--no-technology--"],"description":"Potential path traversal in call to `extractall` for a `tarfile`","references":["https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall"],"license":"AGPL-3.0 license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/trailofbits.python.tarfile-extractall-traversal.tarfile-extractall-traversal","shortlink":"https://sg.run/2RLD","semgrep.dev":{"rule":{"origin":"community","r_id":11763,"rule_id":"GdUZxq","rule_name":"trailofbits.python.tarfile-extractall-traversal.tarfile-extractall-traversal","rv_id":833310,"url":"https://semgrep.dev/playground/r/pZTXjAW/trailofbits.python.tarfile-extractall-traversal.tarfile-extractall-traversal","version_id":"pZTXjAW"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/trailofbits.python.tarfile-extractall-traversal.tarfile-extractall-traversal","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"ERROR","fingerprint":"ad0a099f7f3b628c54adee7b76742bf246199f9b20e898536c8a88a0aa41332785b470d8394f7e6694c5910d2239fddca91304088e4435cc8d6a8cf484f05b0f_0","lines":"        tar_file = tarfile.open(filename, 'r|gz')\n        tar_file.extractall(path)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-cPickle","path":"repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcached.py","start":{"line":152,"col":21,"offset":5430},"end":{"line":152,"col":57,"offset":5466},"extra":{"metavars":{"$FUNC":{"start":{"line":152,"col":28,"offset":5437},"end":{"line":152,"col":33,"offset":5442},"abstract_content":"dumps"}},"message":"Avoid using `cPickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-cPickle","shortlink":"https://sg.run/eLxb","semgrep.dev":{"rule":{"origin":"community","r_id":9676,"rule_id":"7KUQNL","rule_name":"python.lang.security.deserialization.pickle.avoid-cPickle","rv_id":946398,"url":"https://semgrep.dev/playground/r/xyTqn5v/python.lang.security.deserialization.pickle.avoid-cPickle","version_id":"xyTqn5v"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-cPickle","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"bfb6ab673cd933aaf8edf7d113e95fa3cab8227b2e5f392fd353568a19574a037a85456b51200466e5101a2ed5e66030916eb4b6527d5bff18a7933a471e7a24_0","lines":"            value = pickle.dumps(value, PICKLE_PROTOCOL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcached.py","start":{"line":152,"col":21,"offset":5430},"end":{"line":152,"col":57,"offset":5466},"extra":{"metavars":{"$FUNC":{"start":{"line":152,"col":28,"offset":5437},"end":{"line":152,"col":33,"offset":5442},"abstract_content":"dumps"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rule_name":"python.lang.security.deserialization.pickle.avoid-pickle","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"ffaadf004fda430214c28de40a8219aebaca0ef8df411bb391fd926c6dbf7ce7e766bc97b2b59fc87b778b834977cbacd72bc3190f4c201fb0c84e93e4286d09_0","lines":"            value = pickle.dumps(value, PICKLE_PROTOCOL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-cPickle","path":"repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcached.py","start":{"line":187,"col":41,"offset":6869},"end":{"line":187,"col":60,"offset":6888},"extra":{"metavars":{"$FUNC":{"start":{"line":187,"col":48,"offset":6876},"end":{"line":187,"col":53,"offset":6881},"abstract_content":"loads"}},"message":"Avoid using `cPickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-cPickle","shortlink":"https://sg.run/eLxb","semgrep.dev":{"rule":{"origin":"community","r_id":9676,"rule_id":"7KUQNL","rule_name":"python.lang.security.deserialization.pickle.avoid-cPickle","rv_id":946398,"url":"https://semgrep.dev/playground/r/xyTqn5v/python.lang.security.deserialization.pickle.avoid-cPickle","version_id":"xyTqn5v"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-cPickle","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"db33bb6017508e83e8c1ee1dc2ad0ae19db0bfa3008d05c397dfd113616f7d398630523845c0eefdd6ddb7e8cb749dd0480decba8326591ada1ef519232b4d84_0","lines":"                                value = pickle.loads(value)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcached.py","start":{"line":187,"col":41,"offset":6869},"end":{"line":187,"col":60,"offset":6888},"extra":{"metavars":{"$FUNC":{"start":{"line":187,"col":48,"offset":6876},"end":{"line":187,"col":53,"offset":6881},"abstract_content":"loads"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rule_name":"python.lang.security.deserialization.pickle.avoid-pickle","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"2432f1fe34f5b8dfe237552bd455e0604f4b27ed77d827008caff2ef74ebc1c1803c9e98a1e582104a0ce287559347dd6906100d1c1ba402e1c0a7ce4e30e2f0_0","lines":"                                value = pickle.loads(value)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-cPickle","path":"repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcached.py","start":{"line":294,"col":25,"offset":11248},"end":{"line":294,"col":61,"offset":11284},"extra":{"metavars":{"$FUNC":{"start":{"line":294,"col":32,"offset":11255},"end":{"line":294,"col":37,"offset":11260},"abstract_content":"dumps"}},"message":"Avoid using `cPickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-cPickle","shortlink":"https://sg.run/eLxb","semgrep.dev":{"rule":{"origin":"community","r_id":9676,"rule_id":"7KUQNL","rule_name":"python.lang.security.deserialization.pickle.avoid-cPickle","rv_id":946398,"url":"https://semgrep.dev/playground/r/xyTqn5v/python.lang.security.deserialization.pickle.avoid-cPickle","version_id":"xyTqn5v"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-cPickle","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"bfb6ab673cd933aaf8edf7d113e95fa3cab8227b2e5f392fd353568a19574a037a85456b51200466e5101a2ed5e66030916eb4b6527d5bff18a7933a471e7a24_1","lines":"                value = pickle.dumps(value, PICKLE_PROTOCOL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcached.py","start":{"line":294,"col":25,"offset":11248},"end":{"line":294,"col":61,"offset":11284},"extra":{"metavars":{"$FUNC":{"start":{"line":294,"col":32,"offset":11255},"end":{"line":294,"col":37,"offset":11260},"abstract_content":"dumps"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rule_name":"python.lang.security.deserialization.pickle.avoid-pickle","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"ffaadf004fda430214c28de40a8219aebaca0ef8df411bb391fd926c6dbf7ce7e766bc97b2b59fc87b778b834977cbacd72bc3190f4c201fb0c84e93e4286d09_1","lines":"                value = pickle.dumps(value, PICKLE_PROTOCOL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-cPickle","path":"repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcached.py","start":{"line":331,"col":41,"offset":12816},"end":{"line":331,"col":60,"offset":12835},"extra":{"metavars":{"$FUNC":{"start":{"line":331,"col":48,"offset":12823},"end":{"line":331,"col":53,"offset":12828},"abstract_content":"loads"}},"message":"Avoid using `cPickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-cPickle","shortlink":"https://sg.run/eLxb","semgrep.dev":{"rule":{"origin":"community","r_id":9676,"rule_id":"7KUQNL","rule_name":"python.lang.security.deserialization.pickle.avoid-cPickle","rv_id":946398,"url":"https://semgrep.dev/playground/r/xyTqn5v/python.lang.security.deserialization.pickle.avoid-cPickle","version_id":"xyTqn5v"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-cPickle","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"db33bb6017508e83e8c1ee1dc2ad0ae19db0bfa3008d05c397dfd113616f7d398630523845c0eefdd6ddb7e8cb749dd0480decba8326591ada1ef519232b4d84_1","lines":"                                value = pickle.loads(value)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcached.py","start":{"line":331,"col":41,"offset":12816},"end":{"line":331,"col":60,"offset":12835},"extra":{"metavars":{"$FUNC":{"start":{"line":331,"col":48,"offset":12823},"end":{"line":331,"col":53,"offset":12828},"abstract_content":"loads"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rule_name":"python.lang.security.deserialization.pickle.avoid-pickle","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"},"src":"new-rule"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":174377,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"2432f1fe34f5b8dfe237552bd455e0604f4b27ed77d827008caff2ef74ebc1c1803c9e98a1e582104a0ce287559347dd6906100d1c1ba402e1c0a7ce4e30e2f0_1","lines":"                                value = pickle.loads(value)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}}],"errors":[],"paths":{"scanned":["README.md","repos_commits_edited_files/repos_edited_files/Pyro3/554e095/daemonizer.py","repos_commits_edited_files/repos_edited_files/Zope/2abdf14/ZRPythonExpr.py","repos_commits_edited_files/repos_edited_files/bcfg2/a524967/Trigger.py","repos_commits_edited_files/repos_edited_files/bcfg2/f4a35ef/Hg.py","repos_commits_edited_files/repos_edited_files/bcfg2/f4a35ef/SSHbase.py","repos_commits_edited_files/repos_edited_files/bcfg2/f4a35ef/SSLCA.py","repos_commits_edited_files/repos_edited_files/bcfg2/f4a35ef/Svn.py","repos_commits_edited_files/repos_edited_files/bcfg2/f4a35ef/Viz.py","repos_commits_edited_files/repos_edited_files/beaker/91becae/pycrypto.py","repos_commits_edited_files/repos_edited_files/keystone/1d146f5/core.py","repos_commits_edited_files/repos_edited_files/keystone/375838c/service.py","repos_commits_edited_files/repos_edited_files/keystone/628149b/core.py","repos_commits_edited_files/repos_edited_files/keystone/628149b/service.py","repos_commits_edited_files/repos_edited_files/keystone/a67b248/core.py","repos_commits_edited_files/repos_edited_files/keystone/a67b248/kvs.py","repos_commits_edited_files/repos_edited_files/keystone/a67b248/sql.py","repos_commits_edited_files/repos_edited_files/keystone/c13d0ba/core.py","repos_commits_edited_files/repos_edited_files/nova/034762e/affinity_filter.py","repos_commits_edited_files/repos_edited_files/nova/1f644d2/api.py","repos_commits_edited_files/repos_edited_files/nova/1f644d2/cloud.py","repos_commits_edited_files/repos_edited_files/nova/1f644d2/quota.py","repos_commits_edited_files/repos_edited_files/nova/1f644d2/security_groups.py","repos_commits_edited_files/repos_edited_files/nova/2427d4a/api.py","repos_commits_edited_files/repos_edited_files/nova/ad32419/MANIFEST.in","repos_commits_edited_files/repos_edited_files/nova/ad32419/s3.py","repos_commits_edited_files/repos_edited_files/nova/ce4b2e2/api.py","repos_commits_edited_files/repos_edited_files/nova/ff06c7c/cloud.py","repos_commits_edited_files/repos_edited_files/nova/ff06c7c/firewall.py","repos_commits_edited_files/repos_edited_files/nova/ff06c7c/security_groups.py","repos_commits_edited_files/repos_edited_files/pycrypto/9f912f1/ElGamal.py","repos_commits_edited_files/repos_edited_files/reviewboard/7a0a9d9/diffviewer.js","repos_commits_edited_files/repos_edited_files/reviewboard/7a0a9d9/reviewtags.py","repos_commits_edited_files/repos_edited_files/reviewboard/7a0a9d9/screenshots.js","repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcache.conf-sample","repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcache.py","repos_commits_edited_files/repos_edited_files/swift/e1ff51c/memcached.py","repos_commits_edited_files/repos_edited_files/swift/e1ff51c/proxy-server.conf-sample","repos_commits_edited_files/repos_edited_files/swift/e1ff51c/proxy-server.conf.5"]},"interfile_languages_used":[],"skipped_rules":[]}